<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"[
	<!ENTITY aBi "arrowBase.mouseover;">
	<!ENTITY aNi "arrowN.mouseover;">
	<!ENTITY aSi "arrowS.mouseover;">
	<!ENTITY aEi "arrowE.mouseover;">
	<!ENTITY aWi "arrowW.mouseover;">
	<!ENTITY aNo "arrowN.mouseout;">
	<!ENTITY aSo "arrowS.mouseout;">
	<!ENTITY aEo "arrowE.mouseout;">
	<!ENTITY aWo "arrowW.mouseout;">
	<!ENTITY bk1 "#fcb">
	<!ENTITY bk2 "#bee">
]>
<svg width="100%" height="100%" zoomAndPan="disable" onload="init(evt)"
xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:toka="http://www.zuccaralloo.de/toka">

<desc>tokarama: click-n-jump game written by Heiko Niemann in 2004</desc>

<title>tokarama</title>

<script><![CDATA[

var svgDoc;

var xlinkNS = 'http://www.w3.org/1999/xlink';
var tokaNS = 'http://www.zuccaralloo.de/toka';
var nssvg = 'http://www.w3.org/2000/svg';

var tokData = 'xxxtttxxxxxxtttxxxxxxtttxxxtttttttttttttotttttttttttttxxxtttxxxxxxtttxxxxxxtttxxx';
var display = {t:'inline',o:'none',x:'none'};

var stats = {tok:[],n:[],e:[],s:[],w:[]};

var toka = {a:null,b:null,c:null,pos:null};

var animToken,dotts,tokas,board;

var direx = {
   n:{a:'m0,0 c -5,-25 50,-75 50,-60', b:'m0,0 l 50,-60', c:'.15 .05 .3 .1', d:-9},	
   s:{a:'m0,0 c-15,-10-50,15 -50,60',  b:'m0,0 l -50,60', c:'.15 .45 .6 .75',d: 9},	
   e:{a:'m0,0 c 25,-15 80,-10 100,20', b:'m0,0 l 100,20', c:'.15 .45 .6 .75',d: 1},	
   w:{a:'m0,0 c-35,-40-80,-45-100,-20',b:'m0,0 l-100,-20',c:'.15 .05 .3 .1', d:-1}
};

var coords = {x:0,y:0};


function init(e) 
{
	var i,j,tChar,xpos,ypos,disp,tran,newDot,newTok;
	
	svgDoc = e.target.ownerDocument;
	
	animToken = svgDoc.getElementById('animToken');
   	
	dotts = svgDoc.getElementById('dotts');
	tokas = svgDoc.getElementById('tokas');
	board = svgDoc.getElementById('board');
			
	for (var k=0; k<81; k++) 
	{
		i = Math.floor(k/9);
		j = k%9;
		
		tChar = tokData.charAt(k);
	
		stats.tok[k] = tChar;
	
		if (tChar!='x') 
		{
			xpos = 200 + j*50 - 25*i;
			ypos = 45 + j*10 + 30*i;
			tran = 'translate(' + xpos + ',' + ypos + ')';
			disp = display[tChar];
			
			newDot = svgDoc.createElementNS(nssvg,'use');
			setAttr(newDot,null,'transform',tran);
			setAttr(newDot,xlinkNS,'href','#dot');
			dotts.appendChild(newDot);
			
			newTok = svgDoc.createElementNS(nssvg,'use');
			setAttr(newTok,null,'id','t'+k);
			setAttr(newTok,tokaNS,'tid',k);
			setAttr(newTok,null,'display',disp);
			setAttr(newTok,null,'transform',tran);
			setAttr(newTok,xlinkNS,'href','#toka');
			tokas.appendChild(newTok);
		}
	}
	calculateScore();
	svgDoc.documentElement.addEventListener('mousemove', getCoords, false);
}

function getCoords(e) 
{
	coords.x = e.clientX;
	coords.y = e.clientY;
}

function startGame() 
{
	setAttr('introGroup',null,'display','none');
	setAttr('introHint',null,'display','none');
	setAttr('resetButton',null,'display','inline');
}

function resetBoard() 
{
	for (var k=0; k<81; k++)
	{
		tChar = tokData.charAt(k);

		stats.tok[k] = tChar;

		if(tChar!='x') setAttr('t'+k,null,'display',display[tChar]);
	}
	calculateScore();
}

function overToken(e) 
{
   var curToken = e.target; 
   if(e.target.correspondingUseElement) 
   {
     curToken = e.target.correspondingUseElement;
   }
		   
   toka.pos = curToken.getAttributeNS(null,'transform');
   setAttr('arrowGroup',null,'transform',toka.pos);      

	toka.a = parseInt(curToken.getAttributeNS(tokaNS,'tid'));
	
	setAttr('arrowN',null,'display',stats.n[toka.a]);
	setAttr('arrowS',null,'display',stats.s[toka.a]);
	setAttr('arrowE',null,'display',stats.e[toka.a]);
	setAttr('arrowW',null,'display',stats.w[toka.a]);
	setAttr('arrowGroup',null,'display','inline');
}

function overBoard()
{
	setAttr('arrowGroup',null,'display','none');
}

function setAnim(nwse)
{
   tokas.removeEventListener('mouseover',overToken,false);
	board.removeEventListener('mouseover',overBoard,false);
	setAttr('resetButton',null,'pointer-events','none');
	
	setAttr('arrowGroup',null,'display','none');
					
	toka.b = toka.a+direx[nwse].d;
	toka.c = toka.a+direx[nwse].d*2;
	
	setAttr('animToken',null,'path',direx[nwse].a);
   setAttr('animShadow',null,'path',direx[nwse].b);
   setAttr('animShadow',null,'keySplines',direx[nwse].c);
	
	setAttr('hopper',null,'transform',toka.pos);
	setAttr('hopper',null,'display','inline');
	setAttr('t'+toka.a,null,'display','none');
       
	animToken.beginElement();
}


function tokaLanding(evt) 
{		
   setAttr('t'+toka.c,null,'display','inline');
	setAttr('t'+toka.b,null,'display','none');
	setAttr('hopper',null,'display','none');
  	
	stats.tok[toka.a] = 'o';
   stats.tok[toka.b] = 'o';
   stats.tok[toka.c] = 't';

	setTimeout('calculateScore()',50);
}

function calculateScore() 
{
	var nbtok = 0;
	var nbmov = 0;
		
	for (k=0; k<81; k++)
	{
		i = Math.floor(k/9);
		j = k%9;
		
		stats.n[k] = 'none';
		stats.s[k] = 'none';
		stats.e[k] = 'none';
		stats.w[k] = 'none';
		
		if (stats.tok[k]=='t')
		{ 
			nbtok++;
			if (i>1 && stats.tok[k-9]=='t' && stats.tok[k-18]=='o') 
			{
				nbmov++; 
				stats.n[k] = 'inline';
			}
			if (j<7 && stats.tok[k+1]=='t' && stats.tok[k+ 2]=='o')
			{
				nbmov++; 
				stats.e[k] = 'inline';
			}
			if (i<7 && stats.tok[k+9]=='t' && stats.tok[k+18]=='o') 
			{
				nbmov++; 
				stats.s[k] = 'inline';
			}
			if (j>1 && stats.tok[k-1]=='t' && stats.tok[k- 2]=='o') 
			{
				nbmov++; 
				stats.w[k] = 'inline';
			}
		}
	}
		
	if (nbmov==0) 
	{
		if(nbtok<=1) {
			setAttr('winner',null,'display','inline');
			setAttr('almost',null,'display','none');
		}
		else {
			setAttr('winner',null,'display','none');
			setAttr('almost',null,'display','inline');
		}
		
		setAttr('intro',null,'display','none');
		setText('tokleft','tokas left: '+nbtok,null);
		setAttr('introGroup',null,'display','inline');
		setAttr('resetButton',null,'display','none');
				
		resetBoard();
	}
	else 
	{
		tokas.addEventListener('mouseover',overToken,false);
		board.addEventListener('mouseover',overBoard,false);
		setAttr('resetButton',null,'pointer-events','all');
		
		setAttr('shield',null,'cx',coords.x);
		setAttr('shield',null,'cy',coords.y);
		setAttr('shield',null,'display','inline');
		setTimeout("setAttr('shield',null,'display','none')",300);
	}
}

function setAttr(elem,ns,attr,val) 
{
	var target = (typeof elem == 'string') ? svgDoc.getElementById(elem) : elem;
	target.setAttributeNS(ns,attr,val);	
}

function setText(elem,val) 
{
	var target = (typeof elem == 'string') ? svgDoc.getElementById(elem) : elem;
	target.firstChild.data = val;
}

]]></script>


<defs>
   
	<!-- gradients -->
   <linearGradient id="gradTokas" gradientTransform="rotate(55)">
      <stop offset="20%" stop-color="#885" />
      <stop offset="90%" stop-color="#331" />
   </linearGradient>

   <linearGradient id="gradDotts" gradientTransform="rotate(55)">
      <stop offset="20%" stop-color="#aaaaa0" />
      <stop offset="90%" stop-color="#bbbbb0" />
   </linearGradient>
	
	<!-- button,dot,toka,arrow --> 
	<rect id="button" x="0" y="0" width="20" height="20" rx="5" fill="#bdc8d2" fill-opacity="1" stroke="#444" stroke-width="1.5"/>

   <ellipse id="dot" cx="0" cy="0" rx="17" ry="10" fill="url(#gradDotts)" stroke="#999990" stroke-width="1"/>

   <g id="tokaTop" >
      <ellipse cx="1" cy="0"  rx="17" ry="10" fill="#331"/>
      <ellipse cx="0" cy="-4" rx="17" ry="10" fill="#eee" opacity=".9"/>
      <ellipse cx="0" cy="-6" rx="17" ry="10" fill="url(#gradTokas)"/>
   </g>

	<g id="toka">
      <ellipse cx="5" cy="3" rx="17" ry="10" fill="#464646" opacity=".7"/>
      <use xlink:href="#tokaTop" />
   </g>

   <path id="arrowSymb" d="M0,-3.5 l-3.3,4.7 2.5,0 0,2.3 1.6,0 0,-2.3 2.5,0z" fill="maroon" stroke="maroon" stroke-width="1" stroke-linejoin="round" pointer-events="none"/>

   <ellipse id="arrowBack" cx="0" cy="0" rx="6" ry="6" stroke="#600" stroke-width=".5"/> 
   
	<!-- animations -->
	<set xlink:href="#backN" attributeName="fill" to="&bk2;" begin="&aNi;" end="&aNo;&aSi;&aEi;&aWi;&aBi;"/>
	<set xlink:href="#backS" attributeName="fill" to="&bk2;" begin="&aSi;" end="&aNi;&aSo;&aEi;&aWi;&aBi;"/>
	<set xlink:href="#backE" attributeName="fill" to="&bk2;" begin="&aEi;" end="&aNi;&aSi;&aEo;&aWi;&aBi;"/>
	<set xlink:href="#backW" attributeName="fill" to="&bk2;" begin="&aWi;" end="&aNi;&aSi;&aEi;&aWo;&aBi;"/>

	<animateMotion id="animToken" xlink:href="#hoptop" begin="indefinite" dur="1.5s" onend="tokaLanding()" fill="freeze"/>
   <animateMotion id="animShadow" xlink:href="#shadow" begin="animToken.begin" dur="1.5s" calcMode="spline" fill="freeze"/>
	<animateTransform xlink:href="#shadow" begin="animToken.begin" dur="1.5s" attributeName="transform" type="scale" values="1;1.1;1.1;1" fill="freeze"/>
	<animate xlink:href="#shadow" begin="animToken.begin" dur="1.5s" attributeName="opacity" values=".7;.5;.5;.4;.4;.7" fill="freeze"/>
	
</defs>


<!-- background -->
<rect x="-1000" y="-1000" height="3000" width="3000" fill="#d3d0c3"/>

<!-- begin viewing area -->
<svg width="100%" height="100%" viewBox="-30 10 680 450">

<!-- frame -->
<rect x="10" y="10"  rx="0" width="600" height="400" fill="none" stroke="#111" stroke-width="1" />
<rect x="11" y="11"  rx="0" width="600" height="400" fill="none" stroke="#eee" stroke-width="1" />

<!-- board -->
<g id="board">

   <g transform="translate(305,210) rotate(-5)">
      <ellipse cx="2" cy="16" rx="281" ry="174" fill="#777770" fill-opacity=".2"/>
      <ellipse cx="0" cy="13" rx="281" ry="174" fill="#777770" fill-opacity=".5"/>
      <ellipse cx="0" cy="11" rx="280" ry="169" fill="#664" fill-opacity=".9" stroke="#443" stroke-width="1"/>
      <ellipse cx="0" cy="0"  rx="280" ry="170" fill="#aaaa9d" stroke="#221" stroke-width=".8"/>
   </g>

   <g id="dotts" />   
	
	<g id="resetButton" transform="translate(570 370)" display="none" onclick="resetBoard()">
		<use xlink:href="#button" />
		<path d="M6,6 l8,0 0,8 -8,0 z" fill="#444"/>
	</g>

</g>

<!-- tokas -->
<g id="tokas"/>

<!-- animated toka -->
<g id="hopper" display="none">
 	<ellipse id="shadow" cx="5" cy="3" rx="17" ry="10" fill="#333" opacity=".8"/>
   <use id="hoptop" xlink:href="#tokaTop" />
</g>

<!-- arrows -->
<g id="arrowGroup" display="none" transform="translate(60,70)">

   <ellipse id="arrowBase" transform="translate(0,-7) rotate(25)" rx="22.5" ry="18" fill="#fff" opacity="0" />

   <g id="arrowN" onclick="setAnim('n')" transform="translate(4,-16) rotate(22)">
      <use xlink:href="#arrowBack" id="backN" fill="&bk1;"/>
		<use xlink:href="#arrowSymb" />
	</g>

   <g id="arrowE" onclick="setAnim('e')" transform="translate(14,-2) rotate(89)">
      <use xlink:href="#arrowBack" id="backE" fill="&bk1;"/>
      <use xlink:href="#arrowSymb" />
   </g>

   <g id="arrowW" onclick="setAnim('w')" transform="translate(-15,-12) rotate(-60)">
      <use xlink:href="#arrowBack" id="backW" fill="&bk1;"/>
      <use xlink:href="#arrowSymb" />
   </g>

   <g id="arrowS" onclick="setAnim('s')" transform="translate(-7,2) rotate(220)">
      <use xlink:href="#arrowBack" id="backS" fill="&bk1;"/>
      <use xlink:href="#arrowSymb" />
   </g>

</g>

<!-- intro, feedback -->
<g id="introGroup" font-family="Verdana64" font-size="12">

	<ellipse transform="translate(305,210) rotate(-5)" rx="270" ry="160" fill="#aaaa9d" stroke="none"/>
					
	<use transform="translate(480,200)" xlink:href="#dot" />
	<use transform="translate(400,260)" xlink:href="#toka" />
	<use transform="translate(440,230)" xlink:href="#toka" />
		
	<g id="introHint" transform="translate(100,90)" pointer-events="none">
	
		<path transform="translate(334,170) rotate(-25)" d="M0,0 l-6,0 0,6z" fill="#443" stroke="none"/>
		<path transform="translate(341,163) rotate(-50)" d="M0,0 l6,0 0,6z" fill="#443" stroke="none"/>
		<text x="345" y="178" fill="#443" font-family="Verdana64" font-size="8">tokas</text>
	
	</g>

	<g fill="#443" pointer-events="none" font-family="Verdana64" font-size="13">

		<text id="intro" transform="translate(190,90)">
			<tspan x="0" y="20" font-family="VerdanaBold64" font-size="18">tokarama</tspan>
			<tspan x="0" y="60">click-n-jump</tspan>
			<tspan x="0" y="90">tokas: remove all but one</tspan>
			<tspan x="0" y="120">how: jump over toka</tspan>
			<tspan x="0" y="170">have fun</tspan>
		</text>
			
		<text id="winner" transform="translate(190,100)" display="none" >
			<tspan x="0" y="70">you did it!</tspan>
			<tspan x="0" y="120">feel free to play again</tspan>
		</text>
	
		<text id="almost" transform="translate(190,100)" display="none">
			<tspan id="tokleft" x="0" y="70">&#32;</tspan>
			<tspan x="0" y="120">try again</tspan>
		</text>
		
	</g>
	
	<g transform="translate(190,300)" onclick="startGame()">
		<use xlink:href="#button" />
		<path d="M7,5 l8,5 -8,5 z" fill="#444" />
	</g>
	
</g>

</svg>
<!-- end viewing area -->

<!-- shield -->
<circle id="shield" cx="0" cy="0" r="50" fill="#fff" fill-opacity="0" display="none"/>

</svg>